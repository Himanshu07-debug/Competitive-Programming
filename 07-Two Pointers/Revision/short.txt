PROBLEM - 01 ------------------->>

Permutation of required Characters is same as ANAGRAM CHECKING

Q.s -> Count of occurencess of anagram of string txt on the String s.

HINT ->> Sliding window + cnt[256]

Follow-up -> Is String s contain Permutation of string txt as a Substring in it or not ???


PROBLEM - 02 ------------------>>

Q.s -> 2 sorted arrays given. The number of pairs (i,j) for which a[i] == b[j] ???

HINT --> How many Condition to check ?? The code approach will be Similar to ???



PROBLEM - 03 ------------------>>

Q.s -> No. of Segments with difference between max and min element is atmost k..

HINT -> Which Type of Good Segment technique Problem ? What Container You will used ??

// MULTISET



PROBLEM - 04 ------------------->>

Q.s -> A segment is good if its sum <= k. Find the Sum of the lengths of all possible Good Segments.

HINT -> Which Type of Technique Problem ? How to calculate the SUM OF LENGTHS OF POSSIBLE GOOD SEGMENTS for our answer ? LOGIC ???

HINT 2 -> [1,2,3] me 3 se end hone wale 3 subarray possible... Yeah 3 Subarray ke length ka Sum ek pattern follow krta hai , See...



PROBLEM - 05 ------------------->>

Q.s -> Girl likes 2 boys. Inorder to keep the relationship going on the, Girl has to keep the boys more than k distance far from each other. 
       How many ways girl can choose the 2 valid Places for 2 boys ? [ arr is sorted ]
       Ex -> Available Places arr = [1 3 5 8] , k = 4  ==> 2  ( (1,8) & (3,8) only possible ) 

HINT - 1 ==> O(nlogn) approach .. Binary Search ?? 
HINT - 2 ==> upperBound can be used ...

HINT - 3 ==> O(n) solution --> Two Pointers ???

HINT - 4 ==> Observe, This Question can be deduce as => Number of Subarrays with arr[j] - arr[i] > k .. arr[j] > arr[i] + k . Technique ??



PROBLEM - 06 ------------------->>

Q.s -> There are M towers and N cities in the state. They are Located in a Straight line. There x-axis pts. i.e location are given in two arrays.
       Har ek tower ka ek specific radius hai.. Each Tower at position x has its network only in the range of x - r to x + r . Your Task is to 
       find the minimum value of r so that each tower will have a each city will have a network from atleast one Tower.

       EX -> n = 3 , m = 2 , city = [-2, 2, 4] , tower = [-3, 0]  ..... Ans => 4

HINT - 1 ==> O(nlogn) approach .. Binary Search ?? 
HINT - 2 ==> upperBound can be used ... 
HINT - 3 ==> Did you have to handle the extreme indexes ?? How to get rid of this extra Checking of extreme pts in such cases. 
              Can Some Container Other than vectors can be used for tower to do above op. more Efficiently..


HINT - 4 ==> Can You come up with a O(n) Solution --> Two Pointers ???
HINT - 5 ==> Kisi bhi city i ke liye uske j and j + 1 tower ke location ki only 3 possible cases hai .. 3 cases ??
HINT - 6 ==> For any City i, j will be a valid tower if dist(i,j) < dist(i, j+1) , Otherwise Invalid Tower hai, aage ke tower check kro



PROBLEM - 08 ---------------------->>

Q.s -> You are given a huge integer a consisting of n digits. It may contain leading zeros. You can swap two digits on adjacent positions if they
       are of diff. parity. You can Perform any number of Operation. Find the minimum integer you can obtain(can have leading zeroes)

       Eg -> 0709 => 0079 , 1337 => 1337 , 246432 => 234642


HINT - 1 --> Same parity wle change kar sakte hai kya unka order jo order me wo aaye hai input me ??
HINT - 2 --> Subarray of any length with same parity ke andar diff parity wla koi bhi pe place kar sakte hai .... Give Example ..

HINT - 3 --> Based on Above 2 observation, aap kaise implement kronge solution.. 
HINT - 4 --> Two arrays of Even and Odd.. And then Merge Sort..


PROBLEM - 10 ------------------------>>

Q.s -> Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.
       Ex -> s1 = "ab", s2 = "eidbaooo"  -> True

HINT -> Permutation is same as Anagram. Similar to Problem - 01






CONCEPT --------------------->>

Agar Apko set of numbers diye hai and ->
If You have to make all the elements equal in min. number of Operation and In one Operation, it is allowed to increase or Decrease the elements 
value by any number x , Making all the elements equal to the Middle element or Median is the Optimal Option

-> Each window of size k ke elements equal banao.. So Median ke equal kr dena 
