PROBLEM - 01 ---------->>

A Good Modulo Question To see. Remember -> 2 is the only prime Number i.e even


PROBLEM - 02 ---------->>

If all divisors of N are given in a SORTED order, then we can get n by multiplying arr[0]*arr[n-1] , arr[1]*arr[n-2] .. Same like palindrome
** CONCEPT --> DIVISORS OF ANY NUMBER ALWAYS COMES IN PAIR


PROBLEM - 03 ---------->> 

IMP technique in the Question [ MUST SEE ] 
.. Agar Humko koi digit maximum baar produce krna hai apne Number me ??
-> For example 2478  -> 9 produce krna hai ===> 2469 , 2399, 1999  .... KAISE KRONGE ???


PROBLEM - 05 ----------->> 

How to predict the numbers with atleast 4 divisors ? 
If A number have atleast 2 distinct divisors p,q , then pq is the number with divisors 1, p, q, pq
If divisors not distinct i.e a = p^k , then p^3 is the number with divisors 1, p, p^2, p^3


PROBLEM - 06 ----------->> 

MUST SEE ---> Observing the edge case and reducing the equation for answer
==> x + y = z  -> Condition => One should be exactly divisible by a*b only and two should be divisible by a only.. Find x,y,z ?


PROBLEM - 08 ----------->> 

Number ke K prime factors honge, this can be determine by Checking that Total Number of divisors can be reduced to K values greater than 1.
This K values can be even or Odd

** No. = p1^a1 * p2^a2 ...
** Total No. of divisors = (a1 + 1) * (a2 + 1) ....


PROBLEM - 09 -------------->> 

Try to avoid doing TDS thing, Do only that much which is actually required.. In CP, First try for NAIVE in constraints..
EXAMPLE -> Remove krne ko bola hai, lekin min/max removal ki condition nhi hai, So All possibilties check krlo by assuming any no. of removals


PROBLEM - 10 --------------->>

A variation of Trapping RainWater Problem, Must see.. Keeping track of the boundaries for each element in the array


PROBLEM - 11 --------------->>

In array Rotation Type of Problem, Agar n se rotate kiye to firse Same Array mil jaega .. Try to think in this way..

NOTE --> Modulo also helps in Rotation type of Problem becz array moves cyclic
EXAMPLE --> Top element of the array after x Rotation ==> arr[ x % n]



12 - CONCEPT ------------->> 

Given (x | y) * ( x ^ y ) = N and N is an Odd number, Find x & y ?? 
===> When N is odd, Last bit is set and therefore :: N ^ (N - 1) ==> 1 , becz N - 1 will make change only at the last bit, resulting XOR in 1
===> Similarly , OR will give N 


