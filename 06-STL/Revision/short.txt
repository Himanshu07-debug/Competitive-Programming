PROBLEM - 01 --------->>

Square of Prime Numbers(p^2) have exactly 3 divisors (1, p , p^2)


PROBLEM - 03 --------->>

Two arrays with distinct integers. Prepare pairs with distinct sums.. 

HINT -> To avoid repeatable sums, Sorting can help, HOW ?? 


PROBLEM - 04 --------->>

In Matrix Qs. , Never miss to check the all Possible cases from each 4 directions.. 
Eg -> max( (x-1,y) , (x+1,y) , (x,y+1) , (x,y-1) ) , etc 



PROBLEM - 05 ---------->>

Agar koi Problem Efficiently solve ho sakta hai SET se, but usme cnt yaa indx jaisi thing ki need hai, PBDS is used as an alternative of SET
less<int>       ---> SET 
less_equal<int> ---> MULTISET

==> Question was the Typical Inversion Count Problem -> Approach of PBDS when there are no duplicates and duplicates are there in array ???



PROBLEM - 06 --------->> 

Sliding Window + ===> MAP ( if duplicates are there in the array)
                 ===> SET ( If no duplicates )



PROBLEM - 07 --------->> 

Space Optimized approach to getMin() from the Stack Question ---> Using Two stack or one Stack with pair 



PROBLEM - 08 --------->> 

If I/P ka structure bhut azeeb diya hai, Aur You cant store it in a defined Datatype, use Struct and make Your own Datatype


PROBLEM - 09 ---------->>

If You want all values <= x, do not increase the complexity by using lowerBound, Simply take Upperbound and reduce the iterator by 1


PROBLEM - 10 ---------->>

Jab bhi circular array aaye, either append the array to the back of the original array or If k given, go for Sliding window ..
Appending is the Most used Techinque as it is then easy to make LOGIC



