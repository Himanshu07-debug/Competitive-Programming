
Elementary Operations : Operations that take constant time Complexity

Example : Arithmetic Operations, Comparison of Primitive Types (V.V.IMP) [ Not non-Primitive types Eg : String ]
         Input anf Output of Primitive Types

NOTE : 10^8 Operations : 1 second

Suppose there are 2 strings s1 = "abcd"  and s2 = "abce" 

NOTE : cin >> s1 >> s2  ===>  will take O(len) time .. Also (s1 > s2) will take O(len) time


Asymptotic Notation Practice : N^2 + M(N^2) + M^2(N) + NM  = O( M(N^2) + M^2(N) )


******************************** IMP TABLE *****************************************


    Feasible Big-O function            Maximum N accepted

        O( N! )                ->              10
        O( N^3 )               ->              400
        O( N^2 )               ->              5000
        O( N*sqrt(N) )         ->              10^5
        O( N*logN )            ->              10^6
        O( N )                 ->              10^7
        O( sqrt(N) )           ->              10^12
        O( logN ), O(1)        ->              10^18


    Example : 1 <= N <= 10^5   ===> O( N*sqrt(N) ) ,  O( N*logN ) , O( N )  .. All are valid


************************** WHEN TO CONSIDER TEST CASE *************************************



Note : Test cases matter, unless there's a limit explicitly imposed in the constraints

1. Always consider Test cases i.e O( T * (time your sol. take) ), for testing take T = MAX

2. Neglect Test case when given : It is guaranted that the sum of n overall all test cases does not exceed 2 * 10^5 

Why neglect : O ( T * N/T) => O(N)


ALSO NOTE THAT -> In case of Time such as O(10000*N) .. try to consider 10000 also




